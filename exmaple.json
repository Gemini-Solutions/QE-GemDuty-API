{"user-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/user": {"get": {"tags": ["user-controller"], "operationId": "getAllUsers", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/pendingUsers": {"get": {"tags": ["user-controller"], "summary": "API to get all the pending users.", "description": "Endpoint to get all the pending users.", "operationId": "getAllPendingUsers", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/{id}": {"get": {"tags": ["user-controller"], "summary": "API to get all the pending users.", "description": "Endpoint to get all the pending users.", "operationId": "getUserById", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/search/pendingUsers": {"get": {"tags": ["user-controller"], "operationId": "getPendingUsers", "parameters": [{"name": "userName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "roleNames", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/email": {"get": {"tags": ["user-controller"], "summary": "API to get users by emails.", "description": "Endpoint to get users by email.", "operationId": "getUserByEmail", "parameters": [{"name": "email", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/user/active": {"get": {"tags": ["user-controller"], "summary": "API to get all the active users.", "description": "Endpoint to get all the active users.", "operationId": "getActiveUsers", "parameters": [{"name": "userName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "roleNames", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/user/active/usernamesAndIds": {"get": {"tags": ["user-controller"], "summary": "API to get active name and ids of users.", "description": "Endpoint to get active name and ids of users.", "operationId": "getActiveUserNamesAndIds", "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/user": {"post": {"tags": ["user-controller"], "summary": "API to create a new user.", "description": "Endpoint to create a new user.", "operationId": "createUser", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully added the user", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/user/pendingUsers": {"post": {"tags": ["user-controller"], "summary": "API to create a pending user.", "description": "Endpoint to create a pending user.", "operationId": "createPendingUser", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRecord"}}}, "required": true}, "responses": {"201": {"description": "Successfully added the pending user", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "409": {"description": "Already exists", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/approve/{pendingUsrId}": {"post": {"tags": ["user-controller"], "summary": "API to  approve the pending users.", "description": "Endpoint to approve the pending users.", "operationId": "approvePendingUser", "parameters": [{"name": "pendingUsrId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully approved", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/user": {"put": {"tags": ["user-controller"], "operationId": "updateUser", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRecord"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/{id}/status": {"put": {"tags": ["user-controller"], "operationId": "updateUserStatus", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "isActive", "in": "query", "required": true, "schema": {"type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/{id}/role": {"put": {"tags": ["user-controller"], "operationId": "updateUserRole", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "roleId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/pendingUsers/{pendingUsrId}": {"put": {"tags": ["user-controller"], "summary": "API to update the pending users.", "description": "Endpoint to update the pending users.", "operationId": "updatePendingUser", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully update", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/user/pendingUsers/{pendingUsrId}": {"delete": {"tags": ["user-controller"], "summary": "API to delete the pending users.", "description": "Endpoint to delete the pending users.", "operationId": "deletePendingUser", "parameters": [{"name": "pendingUsrId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully deleted", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/user/{id}": {"delete": {"tags": ["user-controller"], "operationId": "deleteUser", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "schedule-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/schedule": {"get": {"tags": ["schedule-controller"], "operationId": "getSchedules", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/schedule/{scheduleId}": {"get": {"tags": ["schedule-controller"], "summary": "API to retrieve schedule by id.", "description": "Endpoint to retrieve schedule by id.", "operationId": "getScheduleById", "parameters": [{"name": "scheduleId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved schedule by id..", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/schedule/viewSchedules": {"get": {"tags": ["schedule-controller"], "summary": "API to retrieve final schedule.", "description": "Endpoint to retrieve final schedule", "operationId": "fetchUserFromSchedule", "parameters": [{"name": "start", "in": "query", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "end", "in": "query", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "scheduleName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved final schedule.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/schedule/onCall": {"get": {"tags": ["schedule-controller"], "operationId": "fetchUserFromSchedule_1", "parameters": [{"name": "scheduleName", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/schedule/calender/user": {"get": {"tags": ["schedule-controller"], "summary": "API to retrieve schedule by user id.", "description": "Endpoint to retrieve schedule by user id.", "operationId": "getSchedulesByUserId", "parameters": [{"name": "userId", "in": "query", "required": true, "schema": {"type": "string"}}, {"name": "start", "in": "query", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "end", "in": "query", "required": true, "schema": {"type": "string", "format": "date"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved schedule by id..", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/schedule": {"post": {"tags": ["schedule-controller"], "summary": "API to create schedule.", "description": "Endpoint to create schedule.", "operationId": "addSchedule", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleRecord"}}}, "required": true}, "responses": {"201": {"description": "Successfully created schedule.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/schedule": {"put": {"tags": ["schedule-controller"], "summary": "API to update schedule.", "description": "Endpoint to update schedule.", "operationId": "updateSchedule", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleRecord"}}}, "required": true}, "responses": {"200": {"description": "Successfully updated schedule.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/schedule": {"delete": {"tags": ["schedule-controller"], "operationId": "deleteSchedule", "parameters": [{"name": "scheduleId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "notification-rule-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/notificationRules/{id}": {"get": {"tags": ["notification-rule-controller"], "summary": "API to fetch notification rule.", "description": "Endpoint to fetch notification rule by Id.", "operationId": "getNotificationRuleById", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/notificationRules/user/{userId}": {"get": {"tags": ["notification-rule-controller"], "summary": "API to fetch notification rules by userId.", "description": "Endpoint to fetch notification rules by userId.", "operationId": "getNotificationRulesByUserId", "parameters": [{"name": "userId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/notificationRules": {"post": {"tags": ["notification-rule-controller"], "summary": "API to add notification rule.", "description": "Endpoint to add notification rule.", "operationId": "addNotificationRule", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotificationRuleRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Notification Rule Created.", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/notificationRules": {"put": {"tags": ["notification-rule-controller"], "summary": "API to update notification rule.", "description": "Endpoint to update notification rule.", "operationId": "updateNotificationRule", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotificationRuleRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Notification Rule Updated Successfully.", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/notificationRules/{id}": {"delete": {"tags": ["notification-rule-controller"], "summary": "API to delete notification rule.", "description": "Endpoint to delete notification rule by id.", "operationId": "deleteNotificationRule", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Notification Rule deleted Successfully.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "NOT FOUND", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "integrations-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/integrations": {"get": {"tags": ["integrations-controller"], "summary": "API to fetch all integrations.", "description": "Endpoint to fetch all integrations", "operationId": "getIntegrations", "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/integrations/{intgId}": {"get": {"tags": ["integrations-controller"], "summary": "API to fetch integration.", "description": "Endpoint to fetch integration by Integration Id.", "operationId": "getIntegrationsById", "parameters": [{"name": "intgId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/integrations/svcName/{svcName}": {"get": {"tags": ["integrations-controller"], "summary": "API to fetch integrations by svcName.", "description": "Endpoint to fetch integrations by service name.", "operationId": "getIntegrationsBySvcName", "parameters": [{"name": "svcName", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/integrations/svcId/{svcId}": {"get": {"tags": ["integrations-controller"], "summary": "API to fetch integrations by svcId.", "description": "Endpoint to fetch integrations by service Id.", "operationId": "getIntegrationsBySvcId", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully retrieved data.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/integrations": {"post": {"tags": ["integrations-controller"], "summary": "API to add integrations in service.", "description": "Endpoint to add integrations in service.", "operationId": "addIntegrations", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SvcIntegrationsDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Integrations added successfully.", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/integrations/addExtentions": {"post": {"tags": ["integrations-controller"], "summary": "API to add extension in service.", "description": "Endpoint to add extension in service.", "operationId": "addIntegrations_1", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SvcExtentionsDto"}}}, "required": true}, "responses": {"201": {"description": "Extension added successfully.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/integrations": {"put": {"tags": ["integrations-controller"], "summary": "API to update integration.", "description": "Endpoint to update integration", "operationId": "updateIntegrations", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationsDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Integration updated successfully..", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "NOT FOUND", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/integrations/{intgId}": {"delete": {"tags": ["integrations-controller"], "summary": "API to delete integration.", "description": "Endpoint to delete integration by Integration Id.", "operationId": "deleteIntegrations", "parameters": [{"name": "intgId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Deleted integration successfully..", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "incident-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/incident/view": {"get": {"tags": ["incident-controller"], "summary": "API to get all the incident over a time period.", "description": "Endpoint to get all the incident over a time period.", "operationId": "getAllIncidentsOverATimePeriod", "parameters": [{"name": "startTime", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time"}}, {"name": "endTime", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time"}}, {"name": "svcName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/svcName/{svcName}": {"get": {"tags": ["incident-controller"], "summary": "API to get the service by svc name.", "description": "Endpoint to get the service by svc name.", "operationId": "getIncidentBySvcName", "parameters": [{"name": "svcName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/svc/{svcId}": {"get": {"tags": ["incident-controller"], "summary": "API to get the service by svc id.", "description": "Endpoint to get the service by svc id.", "operationId": "getIncidentBySvcId", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"pattern": "SVC_\\d{5}", "type": "string"}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/responseTeam": {"get": {"tags": ["incident-controller"], "summary": "API to get response team on basis of incident.", "description": "Endpoint to get response team on basis of incident.", "operationId": "getResponseTeam", "parameters": [{"name": "incId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/incStats": {"get": {"tags": ["incident-controller"], "summary": "API to fetches incident statistics, including all incidents and those assigned to a specific user", "description": "Endpoint to fetches incident statistics, including all incidents and those assigned to a specific user.", "operationId": "getIncidentsStats", "parameters": [{"name": "svcName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "assignedToMe", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "startDateTime", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time"}}, {"name": "endDateTime", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/incident/incId/{incId}": {"get": {"tags": ["incident-controller"], "summary": "API to get the incident by incident id.", "description": "Endpoint to get incident by incident id.", "operationId": "getIncidentByIncId", "parameters": [{"name": "incId", "in": "path", "required": true, "schema": {"pattern": "INC_\\d{5}", "type": "string"}}], "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/all": {"get": {"tags": ["incident-controller"], "summary": "API to get all the incidents.", "description": "Endpoint to get all the incidents.", "operationId": "getIncidentAll", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/incident": {"post": {"tags": ["incident-controller"], "summary": "API to add the incident.", "description": "Endpoint to add the incident.", "operationId": "addIncident", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AlertDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully added incident", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/incident/filter": {"post": {"tags": ["incident-controller"], "summary": "API to get the list of all incidents with filters", "description": "Endpoint to get list of all incidents with filters", "operationId": "getAllIncidents", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/IncidentFilterCriteria"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/incident/filter/svcDirectory": {"post": {"tags": ["incident-controller"], "summary": "API to get all the service based on filters.", "description": "Endpoint to get all the service based on filters.", "operationId": "getAllFilteredSvc", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceFilterCriteria"}}}, "required": true}, "responses": {"200": {"description": "Successfully retrieved the data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/escalate": {"post": {"tags": ["incident-controller"], "summary": "API to the escalate the incident.", "description": "Endpoint to the escalate the incident", "operationId": "escalateIncident", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EscalateIncidentRecord"}}}, "required": true}, "responses": {"200": {"description": "Successfully escalated the incident", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/incident/delegate": {"post": {"tags": ["incident-controller"], "summary": "API to delegate the incident.", "description": "Endpoint to delegate the incident.", "operationId": "delegateIncident", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DelegateRecord"}}}, "required": true}, "responses": {"200": {"description": "Successfully delegate the incident", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/incident/updateIncidents": {"put": {"tags": ["incident-controller"], "summary": "API to update the incident.", "description": "Endpoint to update the incident", "operationId": "updateIncident", "requestBody": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/IncidentUpdateRecord"}}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully updated the data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/incident/snoozed": {"put": {"tags": ["incident-controller"], "summary": "API to enable snooze for the incident.", "description": "Endpoint to enable snooze for the incident.", "operationId": "snoozedIncidents", "parameters": [{"name": "incidentId", "in": "query", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnoozeRequestDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully enabled the snooze", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/incident/snoozed/disable/{incidentId}": {"put": {"tags": ["incident-controller"], "summary": "API to disable snooze for the incident.", "description": "Endpoint to disable snooze for the incident.", "operationId": "forceDisableSnooze", "parameters": [{"name": "incidentId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully disable the snooze", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "helper-service-controller": {"put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/helper/svc/{svcId}": {"put": {"tags": ["helper-service-controller"], "summary": "API to updates the details of an existing service", "description": "Endpoint to updates the details of an existing service.", "operationId": "updateServiceDetail", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceUpdateRequestDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully updated comment", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "esc-policy-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/esc": {"get": {"tags": ["esc-policy-controller"], "summary": "API to get all escalation policies.", "description": "Endpoint to fetch all escalation policies based on pagination.", "operationId": "getEscPolicies_1", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/esc/svc/{svcId}": {"get": {"tags": ["esc-policy-controller"], "operationId": "getEscBySvcId", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"pattern": "SVC_\\d{5}", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/esc/onCall/users": {"get": {"tags": ["esc-policy-controller"], "summary": "API to fetch onCallUsers.", "description": "Endpoint to fetch onCallUsers based on escalation policy linked to svc for given svcId.", "operationId": "getOncallUsers", "parameters": [{"name": "svcId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/esc/linkedPolicies/user/{userId}": {"get": {"tags": ["esc-policy-controller"], "summary": "API to fetch escalation policies linked to the specified user.", "description": "Endpoint to fetch escalation policies linked to the specified user.", "operationId": "fetchLinkedEscalationPoliciesByUserId", "parameters": [{"name": "userId", "in": "path", "required": true, "schema": {"pattern": "USER_\\d{5}", "type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/esc/escNames": {"get": {"tags": ["esc-policy-controller"], "summary": "API to get all escalation names based on pagination.", "description": "Endpoint to fetch all escalation names based on pagination.", "operationId": "getEscPolicyNames", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/esc": {"post": {"tags": ["esc-policy-controller"], "summary": "API to add escalation policy.", "description": "Endpoint to add new escalation policy.", "operationId": "addEscPolicy", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EscalationPolicyRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully created escalation policy.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/esc/filter": {"post": {"tags": ["esc-policy-controller"], "summary": "API to get all escalation policies based on filters.", "description": "Endpoint to fetch all escalation policies based on filters and pagination.", "operationId": "getEscPolicies", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EscFilterCriteria"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/esc": {"put": {"tags": ["esc-policy-controller"], "summary": "API to update escalation policy.", "description": "Endpoint to update escalation policy.", "operationId": "updateEscPolicy", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EscalationPolicyRecord"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully update data", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/esc": {"delete": {"tags": ["esc-policy-controller"], "summary": "API to delete escalation policy.", "description": "Endpoint to delete escalation policy.", "operationId": "deleteEscPolicy", "parameters": [{"name": "escId", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully deleted data", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "BAD REQUEST", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "contact-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/contacts/{contactId}": {"get": {"tags": ["contact-controller"], "summary": "API to get a user contact.", "description": "Endpoint to get a user contact.", "operationId": "getContactById", "parameters": [{"name": "contactId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved a user contact.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/contacts/user/{userId}": {"get": {"tags": ["contact-controller"], "summary": "API to retrieve a user contact by userId.", "description": "Endpoint to retrieve a user contact by userId.", "operationId": "getContactsByUserId", "parameters": [{"name": "userId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"404": {"description": "Contact not found with given userId", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully deleted a user contact by userId.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/contacts": {"post": {"tags": ["contact-controller"], "summary": "API to create a user contact.", "description": "Endpoint to  create a user contact.", "operationId": "addContact", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully created a user contact.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/contacts": {"put": {"tags": ["contact-controller"], "summary": "API to update a user contact.", "description": "Endpoint to update a user contact.", "operationId": "updateContact", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully updated a user contact.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/contacts/{contactId}": {"delete": {"tags": ["contact-controller"], "summary": "API to delete a user contact.", "description": "Endpoint to delete a user contact.", "operationId": "deleteContact", "parameters": [{"name": "contactId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully deleted a user contact.", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Contact not found with given id", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "comment-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/comment/{incId}": {"get": {"tags": ["comment-controller"], "summary": "API to get all the comments for a particular incident.", "description": "Endpoint to get all the comments for a particular incident.", "operationId": "getAllComments", "parameters": [{"name": "incId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/comment/history/{incId}": {"get": {"tags": ["comment-controller"], "summary": "API to get all the comment history.", "description": "Endpoint to get all the comment history.", "operationId": "getAllCommentHistory", "parameters": [{"name": "incId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved comment", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/comment/{incId}": {"post": {"tags": ["comment-controller"], "summary": "API to add comment on the given incident.", "description": "Endpoint to add the comment on the given incident", "operationId": "addComment", "parameters": [{"name": "incId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Comment"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully added the comment on the given incident", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/comment/{commentId}": {"put": {"tags": ["comment-controller"], "summary": "API to update the comment.", "description": "Endpoint to update the comment.", "operationId": "updateComment", "parameters": [{"name": "commentId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Comment"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully updated comment", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/comment/{commentId}": {"delete": {"tags": ["comment-controller"], "summary": "API to delete all the comments.", "description": "Endpoint to delete the comment.", "operationId": "deleteComment", "parameters": [{"name": "commentId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successfully deleted comment", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "business-svc-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/business-svc/{id}": {"get": {"tags": ["business-svc-controller"], "summary": "API to get a business service.", "description": "Endpoint to get a business service.", "operationId": "getBusinessServiceById", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"pattern": "BSN_\\d{5}", "type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Business Service not found with given id", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully received the business service with given id", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/business-svc": {"get": {"tags": ["business-svc-controller"], "summary": "API to get business service list.", "description": "Endpoint to get a business service list.", "operationId": "getAllBusinessServices", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"200": {"description": "Successfully received the business service list", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Invalid pagination parameters", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/business-svc": {"post": {"tags": ["business-svc-controller"], "summary": "API to create a business service.", "description": "Endpoint to create a business service.", "operationId": "createBusinessService", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessSvcOnboardDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully added the business service", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "Invalid input data", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "put": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/business-svc/{id}": {"put": {"tags": ["business-svc-controller"], "summary": "API to update a business service.", "description": "Endpoint to update a business service.", "operationId": "updateBusinessService", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"pattern": "BSN_\\d{5}", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessSvcOnboardDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully updated the business service", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "Invalid input data", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Business Service not found with given id", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/business-svc/{id}": {"delete": {"tags": ["business-svc-controller"], "summary": "API to delete a business service.", "description": "Endpoint to delete a business service.", "operationId": "deleteBusinessService", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"pattern": "BSN_\\d{5}", "type": "string"}}], "responses": {"200": {"description": "Successfully deleted the business service", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Business Service not found with given id", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "services-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/svc/{svcId}": {"get": {"tags": ["services-controller"], "summary": "API to retrieves the details of a service by its id.", "description": "Endpoint to retrieves the details of a service by its id.", "operationId": "getServiceDetailBySvcId", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/svc/svc-details": {"get": {"tags": ["services-controller"], "summary": "API to retrieves all services..", "description": "Endpoint to retrieves all services.", "operationId": "getAllServiceDetails", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/svc/onboardSvc": {"post": {"tags": ["services-controller"], "summary": "API to onboards a new service.", "description": "Endpoint to onboards a new service.", "operationId": "onBoardService", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceOnboardRequestDto"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully onboarded service", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/svc/{svcId}": {"delete": {"tags": ["services-controller"], "summary": "API to deletes a service by its ID.", "description": "Endpoint to deletes a service by its ID.", "operationId": "deleteServiceBySvcId", "parameters": [{"name": "svcId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully deleted service", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "ivr-controller": {"post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/sms": {"post": {"tags": ["ivr-controller"], "summary": "API to handle the sms response for the incident.", "description": "Endpoint to handle the sms response for the incident.", "operationId": "sms", "parameters": [{"name": "From", "in": "query", "required": true, "schema": {"type": "string"}}, {"name": "Body", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/slack/actions": {"post": {"tags": ["ivr-controller"], "summary": "API to handle the slack response from user.", "description": "Endpoint to handle the slack response from user.", "operationId": "handleSlackResponse", "requestBody": {"content": {"application/json": {"schema": {"type": "string"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"type": "string"}}}}}}}, "/processResponse": {"post": {"tags": ["ivr-controller"], "summary": "API to handle the call response for the incident.", "description": "Endpoint to handle the call response for the incident.", "operationId": "processResponse", "parameters": [{"name": "Digits", "in": "query", "required": true, "schema": {"type": "string"}}, {"name": "incId", "in": "query", "required": true, "schema": {"type": "string"}}, {"name": "email", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "schedule-override-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/scheduleOverrides": {"get": {"tags": ["schedule-override-controller"], "operationId": "getAllScheduleOverrides", "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/scheduleOverrides/{id}": {"get": {"tags": ["schedule-override-controller"], "operationId": "getScheduleOverrideById", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/scheduleOverrides/bySchedule/{scheduleId}": {"get": {"tags": ["schedule-override-controller"], "operationId": "getAllScheduleOverridesByScheduleId", "parameters": [{"name": "scheduleId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/scheduleOverrides": {"post": {"tags": ["schedule-override-controller"], "summary": "API to create a new schedule override.", "description": "Endpoint to create a new schedule override.", "operationId": "createScheduleOverride", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleOverride"}}}, "required": true}, "responses": {"409": {"description": "Already Exists", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Successfully created new schedule override", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/scheduleOverrides/{id}": {"delete": {"tags": ["schedule-override-controller"], "summary": "API to delete a schedule override by id", "description": "Endpoint to delete a schedule override by id.", "operationId": "deleteScheduleOverride", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "404": {"description": "Not Found", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully deleted data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "role-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/roles": {"get": {"tags": ["role-controller"], "summary": "API to get all the roles.", "description": "Endpoint to get all the roles.", "operationId": "getAllRoles", "parameters": [{"name": "pageNumber", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 1}}, {"name": "pageSize", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/roles": {"post": {"tags": ["role-controller"], "summary": "API to create the roles.", "description": "Endpoint to create the roles.", "operationId": "addRole", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Role"}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully created role", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}, "delete": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/roles/{roleId}": {"delete": {"tags": ["role-controller"], "summary": "API to delete a role by id", "description": "Endpoint to delete a role by id.", "operationId": "deleteRole", "parameters": [{"name": "roleId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully deleted data", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "ms-teams-controller": {"post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/ms-teams/channel/join": {"post": {"tags": ["ms-teams-controller"], "summary": "API to integrate a Microsoft Teams channel using a provided link", "description": "Endpoint to join a Microsoft Teams channel using a provided link", "operationId": "joinTeamsViaLink", "parameters": [{"name": "teamsLink", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully joined the channel", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "employee-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/emp": {"get": {"tags": ["employee-controller"], "operationId": "getAllEmployees", "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/emp/search": {"get": {"tags": ["employee-controller"], "operationId": "searchEmpByName", "parameters": [{"name": "keyword", "in": "query", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}, "post": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/emp/emails": {"post": {"tags": ["employee-controller"], "summary": "API to retrieve employee list by email.", "description": "Endpoint to retrieve employee list by email.", "operationId": "getEmpByEmail", "requestBody": {"content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}}}}, "required": true}, "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "204": {"description": "Employee not found with given emails", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved employee list by email.", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "time-line-audit-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/timeline/{incId}": {"get": {"tags": ["time-line-audit-controller"], "summary": "API to get all the audit timeline history for a particular incident.", "description": "Endpoint to get all the audit timeline history for a particular incident.", "operationId": "getAllTimeline", "parameters": [{"name": "incId", "in": "path", "required": true, "schema": {"pattern": "INC_\\d{5}", "type": "string"}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved the timeline", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "on-call-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/onCall/user-onCall/{email}": {"get": {"tags": ["on-call-controller"], "operationId": "getCurrentAndNextOnCall", "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "data-bulk-upload-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/bulkUpload/users": {"get": {"tags": ["data-bulk-upload-controller"], "operationId": "bulkUploadUsers", "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/bulkUpload/services": {"get": {"tags": ["data-bulk-upload-controller"], "operationId": "bulkUploadServices", "responses": {"200": {"description": "OK", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}}, "components": {}, "securitySchemes": {}}}, "analytics-controller": {"get": {"openapi": "3.0.1", "info": {}, "host": "", "basePath": "", "schemes": [], "servers": [{"url": "/inc-svc"}], "security": [], "paths": {"/analytics/totalIncidents": {"get": {"tags": ["analytics-controller"], "summary": "API to retrieve total incident counts based on the provided analytic factor and filter criteria", "description": "Retrieves the total incident counts based on the provided analytic factor and filter criteria", "operationId": "getTotalIncidents", "parameters": [{"name": "analyticFactor", "in": "query", "required": true, "schema": {"type": "string", "enum": ["SERVICES", "ESCALATION_POLICIES", "RESPONDER", "NONE"]}}, {"name": "escalationPolicies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "serviceNames", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDateTime", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": false, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDateTime", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": false, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}], "responses": {"200": {"description": " Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/respondersEffort": {"get": {"tags": ["analytics-controller"], "summary": "API to fetch the top 10 responders based on their total effort duration in resolving incidents", "description": "Endpoint to fetch the top 10 responders based on their total effort duration in resolving incidents", "operationId": "fetchTopResponders", "responses": {"200": {"description": " Successfully retrieved data", "content": {"application/json": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/mttrOverTime": {"get": {"tags": ["analytics-controller"], "summary": "API to resolve is the average amount of time from when an incident was created until it was resolved", "description": "Mean time to resolve is the average amount of time from when an incident was created until it was resolved", "operationId": "getMeanTimeToResolveOvrtm", "parameters": [{"name": "escalationPolicies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "svcNames", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDate", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDate", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": "Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/mttaOverTime": {"get": {"tags": ["analytics-controller"], "summary": "API to acknowledge is the average amount of time from when an incident is created until the time the first responder acknowledges an incident", "description": "Mean time to acknowledge is the average amount of time from when an incident is created until the time the first responder acknowledges an incident. Excludes incidents that were not acknowledged", "operationId": "getMeanTimeToAckIncOvrtm", "parameters": [{"name": "escalationPolicies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "svcNames", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDate", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDate", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}], "responses": {"200": {"description": " Successfully retrieved data", "content": {"*/*": {"schema": {"type": "string"}}}}, "5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/highestMttr": {"get": {"tags": ["analytics-controller"], "summary": "API to fetch the svcName with the highest mean time for Resolve incidents", "description": "Endpoint will be used to fetch the svcName with the highest mean time for Resolve incidents.", "operationId": "getHighestMeanTimeToResolveInc", "parameters": [{"name": "escalationPolicy", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "svcName", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDate", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDate", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}, {"name": "analyticFactor", "in": "query", "required": true, "schema": {"type": "string", "enum": ["SERVICES", "ESCALATION_POLICIES", "RESPONDER", "NONE"]}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": " Successfully fetch the svcName with the highest mean time for Resolve incidents", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/highestMtta": {"get": {"tags": ["analytics-controller"], "summary": "API to fetch the svcName with the highest mean time", "description": "Endpoint will be used to fetch the svcName with the highest mean time for acknowledged incidents", "operationId": "getHighestMeanTimeToAck", "parameters": [{"name": "escalationPolicy", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "svcName", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDate", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDate", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}, {"name": "analyticFactor", "in": "query", "required": true, "schema": {"type": "string", "enum": ["SERVICES", "ESCALATION_POLICIES", "RESPONDER", "NONE"]}}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "200": {"description": " Successfully fetch the svcName with the highest mean time", "content": {"*/*": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}}}}, "/analytics/ackRateOverTime": {"get": {"tags": ["analytics-controller"], "summary": "API to get the message from the SNS", "description": "Endpoint to get the message from the SNS.", "operationId": "getAckRate", "parameters": [{"name": "escalationPolicy", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "svcName", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "urgencies", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["HIGH", "MEDIUM", "LOW", "NA"]}}}, {"name": "priorities", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string", "enum": ["P1", "P2", "P3", "NA"]}}}, {"name": "startDate", "in": "query", "description": "Start date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-10T14:30:00"}, {"name": "endDate", "in": "query", "description": "End date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss). Example: 2024-10-10T14:30:00", "required": true, "schema": {"type": "string", "format": "date-time"}, "example": "2024-10-31T14:30:00"}], "responses": {"5XX": {"description": "Internal Error", "content": {"*/*": {"schema": {"$ref": "#/components/schemas/ResponseDto"}}}}, "201": {"description": "Alert created successfully", "content": {"*/*": {"schema": {"type": "string"}}}}}}}}, "components": {}, "securitySchemes": {}}}}